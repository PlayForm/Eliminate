var g=u=>{const s=t.createSourceFile("temp.ts",u,t.ScriptTarget.Latest,!0),i={},o={},c=new Set,f=a=>{t.forEachChild(a,f)};f(s);const m=a=>d=>{const l=e=>{if(e=t.visitEachChild(e,l,a),t.isVariableStatement(e)){const r=e.declarationList.declarations.filter(p=>{const n=p.name.getText();return typeof i[n]<"u"?i[n]>1||c.has(n):!0});return r.length===0?t.factory.createEmptyStatement():t.factory.updateVariableStatement(e,e.modifiers,t.factory.updateVariableDeclarationList(e.declarationList,r))}else if(t.isIdentifier(e)&&t.isBindingName(e)){const r=e.getText();if(typeof i[r]<"u"&&i[r]===1&&o[r]&&!c.has(r))return o[r]}return e};return t.visitNode(d,l)};return t.createPrinter().printFile(t.transform(s,[m]).transformed[0])};const t=await import("typescript");export{g as default,t as ts};
